<?xml version="1.0" encoding="UTF-8"?>

<project 
	xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd"
>

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.tn</groupId>
  <artifactId>parent</artifactId>
  <version>1.0.00-SNAPSHOT</version>

  <packaging>pom</packaging>

  <properties>

    <!-- 3rd party versions -->
<!--    <cucumber.version>4.8.0</cucumber.version>-->
<!--    <jetty.version>9.4.20.v20190813</jetty.version>-->
    <junit.version>5.10.2</junit.version>
    <feign.version>12.5</feign.version>
<!--    <guava.version>27.0.1-jre</guava.version>-->
<!--    <lombok.version>1.18.20</lombok.version>-->
<!--    <reactor.version>3.4.5</reactor.version>-->
<!--    <spring.version>5.3.21</spring.version>-->
    <spring-boot.version>3.1.3</spring-boot.version>
    <spring-cloud.version>4.0.4</spring-cloud.version>
<!--    <test-containers.version>1.17.1</test-containers.version>-->

    <docker-image-repository>${project.name}</docker-image-repository>

    <maven.compiler.release>21</maven.compiler.release>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <maven.compiler.executable>javac21</maven.compiler.executable>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

  </properties>

  <dependencies>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.5.6</version>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>5.12.0</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <dependencyManagement>

    <dependencies>

      <!-- 3rd party -->

<!--      <dependency>-->
<!--        <groupId>com.google.guava</groupId>-->
<!--        <artifactId>guava</artifactId>-->
<!--        <version>${guava.version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>com.google.guava</groupId>-->
<!--        <artifactId>guava-testlib</artifactId>-->
<!--        <version>${guava.version}</version>-->
<!--        <scope>test</scope>-->
<!--      </dependency>-->

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.16.0</version>
      </dependency>

<!--      <dependency>-->
<!--        <groupId>io.cucumber</groupId>-->
<!--        <artifactId>cucumber-java</artifactId>-->
<!--        <version>${cucumber.version}</version>-->
<!--        <scope>test</scope>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>io.cucumber</groupId>-->
<!--        <artifactId>cucumber-junit</artifactId>-->
<!--        <version>${cucumber.version}</version>-->
<!--        <scope>test</scope>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>io.cucumber</groupId>-->
<!--        <artifactId>cucumber-spring</artifactId>-->
<!--        <version>${cucumber.version}</version>-->
<!--        <scope>test</scope>-->
<!--      </dependency>-->

      <dependency>
        <groupId>io.github.openfeign</groupId>
        <artifactId>feign-gson</artifactId>
        <version>${feign.version}</version>
      </dependency>

      <dependency>
        <groupId>io.github.openfeign</groupId>
        <artifactId>feign-okhttp</artifactId>
        <version>${feign.version}</version>
      </dependency>

      <dependency>
        <groupId>io.github.openfeign</groupId>
        <artifactId>feign-slf4j</artifactId>
        <version>${feign.version}</version>
      </dependency>

<!--      <dependency>-->
<!--        <groupId>io.projectreactor</groupId>-->
<!--        <artifactId>reactor-core</artifactId>-->
<!--        <version>${reactor.version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>io.projectreactor</groupId>-->
<!--        <artifactId>reactor-test</artifactId>-->
<!--        <version>${reactor.version}</version>-->
<!--        <scope>test</scope>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>io.zipkin.brave</groupId>-->
<!--        <artifactId>brave</artifactId>-->
<!--        <version>5.9.5</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.glassfish</groupId>-->
<!--        <artifactId>javax.json</artifactId>-->
<!--        <version>1.1.4</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.projectlombok</groupId>-->
<!--        <artifactId>lombok</artifactId>-->
<!--        <version>1.18.24</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.mockito</groupId>-->
<!--        <artifactId>mockito-core</artifactId>-->
<!--        <version>3.6.28</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.springframework</groupId>-->
<!--        <artifactId>spring-aop</artifactId>-->
<!--        <version>${spring.version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.springframework</groupId>-->
<!--        <artifactId>spring-beans</artifactId>-->
<!--        <version>${spring.version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.springframework</groupId>-->
<!--        <artifactId>spring-core</artifactId>-->
<!--        <version>${spring.version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.springframework</groupId>-->
<!--        <artifactId>spring-context</artifactId>-->
<!--        <version>${spring.version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.springframework</groupId>-->
<!--        <artifactId>spring-jdbc</artifactId>-->
<!--        <version>${spring.version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.springframework</groupId>-->
<!--        <artifactId>spring-test</artifactId>-->
<!--        <version>${spring.version}</version>-->
<!--        <scope>test</scope>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.springframework</groupId>-->
<!--        <artifactId>spring-web</artifactId>-->
<!--        <version>${spring.version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.springframework</groupId>-->
<!--        <artifactId>spring-webflux</artifactId>-->
<!--        <version>${spring.version}</version>-->
<!--      </dependency>-->

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.9</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-configuration-processor</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-actuator</artifactId>
        <version>${spring-boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-autoconfigure</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>

<!--      <dependency>-->
<!--        <groupId>org.springframework.boot</groupId>-->
<!--        <artifactId>spring-boot-starter-data-jdbc</artifactId>-->
<!--        <version>${spring-boot.version}</version>-->
<!--      </dependency>-->

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-jetty</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring-boot.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring-boot.version}</version>
<!--        <exclusions>-->
<!--          <exclusion>-->
<!--            <groupId>org.springframework.boot</groupId>-->
<!--            <artifactId>spring-boot-starter-tomcat</artifactId>-->
<!--          </exclusion>-->
<!--        </exclusions>-->
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-contract-stub-runner</artifactId>
        <version>${spring-cloud.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-contract-wiremock</artifactId>
        <version>${spring-cloud.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-contract-verifier</artifactId>
        <version>${spring-cloud.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>


      <!--      <dependency>-->
<!--        <groupId>org.springframework.cloud</groupId>-->
<!--        <artifactId>spring-cloud-starter-kubernetes</artifactId>-->
<!--        <version>1.1.9.RELEASE</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.springframework.cloud</groupId>-->
<!--        <artifactId>spring-cloud-starter-sleuth</artifactId>-->
<!--        <version>${spring-cloud.version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.springframework.cloud</groupId>-->
<!--        <artifactId>spring-cloud-starter-zipkin</artifactId>-->
<!--        <version>${spring-cloud.version}</version>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.testcontainers</groupId>-->
<!--        <artifactId>testcontainers</artifactId>-->
<!--        <version>${test-containers.version}</version>-->
<!--        <scope>test</scope>-->
<!--      </dependency>-->

<!--      <dependency>-->
<!--        <groupId>org.testcontainers</groupId>-->
<!--        <artifactId>junit-jupiter</artifactId>-->
<!--        <version>${test-containers.version}</version>-->
<!--        <scope>test</scope>-->
<!--      </dependency>-->

      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>2.2</version>
      </dependency>

    </dependencies>

  </dependencyManagement>

  <build>

    <resources>

      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>

      <resource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </resource>

      <resource>
        <directory>src/it/resources</directory>
        <filtering>true</filtering>
      </resource>

    </resources>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.12.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
          <release>${maven.compiler.release}</release>
          <executable>${maven.compiler.executable}</executable>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.5</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
              <goal>test-jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <excludes>
            <exclude>**/*IntegrationTest.java</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
              <excludes>
                <exclude>none</exclude>
              </excludes>
              <includes>
                <include>**/*IntegrationTest.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <configuration>
              <skipIfEmpty>true</skipIfEmpty>
            </configuration>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>add-integration-test-source</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
                <source>src/ct/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.12</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-unit.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>prepare-agent-integration</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco-integration.exec</destFile>
            </configuration>
          </execution>
          <execution>
            <id>report</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>merge</goal>
              <goal>report</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/jacoco.exec</destFile>
              <fileSets>
                <fileSet>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>jacoco-unit.exec</include>
                    <include>jacoco-integration.exec</include>
                  </includes>
                </fileSet>
              </fileSets>
              <dataFile>${project.build.directory}/jacoco.exec</dataFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>

  </build>

  <profiles>

    <profile>
      <id>assembly</id>
      <activation>
        <file>
          <exists>src/main/assembly/assembly.xml</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>3.7.1</version>
            <executions>
              <execution>
                <id>package-assembly</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptors>
                <descriptor>src/main/assembly/assembly.xml</descriptor>
              </descriptors>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>contract-producer</id>
      <activation>
        <property>
          <name>contract-producer.base-test-class</name>
        </property>
        <file>
          <exists>src/ct/resources/contracts</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-contract-maven-plugin</artifactId>
            <version>${spring-cloud.version}</version>
            <extensions>true</extensions>
            <configuration>
              <baseClassForTests>${contract-producer.base-test-class}</baseClassForTests>
              <contractsDirectory>src/ct/resources/contracts</contractsDirectory>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>docker</id>
      <activation>
        <file>
          <exists>Dockerfile</exists>
        </file>
        <property>
          <name>!skipDocker</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>1.4.13</version>
            <executions>
              <execution>
                <id>default</id>
                <phase>install</phase>
                <goals>
                  <goal>build</goal>
                  <!-- push requires a remote repo to push to - need to setup at some point -->
                  <!-- <goal>push</goal> -->
                </goals>
              </execution>
            </executions>
            <configuration>
              <repository>${docker-image-repository}</repository>
              <tag>${project.version}</tag>
              <buildArgs>
                <IMAGE_DIR>target/${project.name}-${project.version}</IMAGE_DIR>
              </buildArgs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>

  <scm>
    <connection>scm:git:https://github.com/nickersan/${project.artifactId}</connection>
    <developerConnection>scm:git:https://github.com/nickersan/${project.artifactId}</developerConnection>
    <url>https://github.com/nickersan/${project.artifactId}</url>
    <tag>HEAD</tag>
  </scm>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub nickersan Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/nickersan/maven-repository</url>
    </repository>
  </distributionManagement>

</project>